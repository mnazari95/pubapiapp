{"version":3,"sources":["util/PostTime.js","bin/config.js","components/MostPopular.js","components/Navbar.js","components/Pagination.js","components/FilterSearch.js","util/StringModifier.js","App.js","serviceWorker.js","index.js"],"names":["PostTime","date","parsedDate","Date","parse","DateFormat","Config","MostPopular","props","state","data","fetch","getApiKey","then","response","Error","statusText","json","res","setState","results","postTime","className","this","map","news","i","key","href","url","rel","target","title","src","media","alt","abstract","formatDate","updated","React","Component","Navbar","isEnterPressed","event","query","sendQuery","alert","retreiveData","userInput","value","bind","type","placeholder","onChange","onKeyPress","onClick","icon","faSearch","Pagination","sendPage","getPage","retreivePage","lastPage","pages","pagBtn","btnDetail","FilterSearch","mSectionList","mFilterList","checkList","array","includes","updateState","filterList","sectionList","retreiveFilteredQuery","checkBoxEvent","checked","handleState","splice","indexOf","inputEvent","name","sDate","eDate","handleSort","sort","push","myCheckBox","param","id","htmlFor","capFirstLetter","str","charAt","toUpperCase","slice","section","queryType","StringModifier","formatFilteredDate","replace","LazyArticle","lazy","App","filterSearch","isFilterSearch","onFilterSearch","compState","filterObj","sections","filter","onSearch","cData","userQuery","queryData","onPageChange","inPage","page","processFetch","adjustPagination","total","numOfArticle","pageObj","mArr","Math","floor","mOffset","offset","pageNumber","lPage","length","a","b","pagination","queryParam","startDate","endDate","sortBy","sectionListStr","filterListStr","elem","ok","result","meta","hits","isReady","error","err","toggleFilter","faArrowUp","faArrowDown","fallback","Boolean","window","location","hostname","match","Footer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30b4b03c.chunk.js","sourcesContent":["import DateFormat from 'dateformat';\n\nexport default class PostTime {\n\n    formatDate(date){\n        const parsedDate = Date.parse(date);\n        return DateFormat(parsedDate, \"mediumDate\", true, false);\n    }\n}","export class Config {\n\n    static getApiKey(){\n        //backup key : ODzH3jmeAJGRZDVB55ZtsKP153HaU3AH\n        return \"ODzH3jmeAJGRZDVB55ZtsKP153HaU3AH\";\n    }\n}","import React from 'react';\nimport PostTime from '../util/PostTime';\nimport {Config} from '../bin/config';\n\nexport default class MostPopular extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      data: []\n    }\n\n    \n  }\n\n  componentDidMount(){\n\n    //Config.getApiKey() is simply a function in which it returns the apikey\n    fetch(\"https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?api-key=\" + Config.getApiKey())\n      .then(response => {\n        if(!response){\n          throw Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(res => {\n        this.setState({\n          data: res.results\n        })\n      })\n        \n  }\n\n    render() {\n\n      const postTime = new PostTime();\n\n        return(\n          <div>\n            <h1 className=\"header\">\n                Most Popular\n            </h1>\n            <div className=\"grid-container\">\n                {\n                   this.state.data.map((news, i) => (\n                       <div key={i} className=\"article\">\n                           <a href={news.url} className=\"page-link\" rel=\"noopener noreferrer\" target=\"_blank\">\n                           <div className=\"article-box\">\n                               <div className=\"article-title\">\n                                   {news.title}\n                                   <div className=\"article-img\">\n                                      <img src={news.media ? news.media.map(media => media['media-metadata'][2].url): null} alt=\"\"></img>\n                                   </div>\n                               </div>\n                               <div className=\"article-snippet\">\n                                   {news.abstract ? news.abstract : \"N/A\"}\n                               </div>\n                               <div className=\"article-date\">\n                                   {postTime.formatDate((news.updated))}\n                               </div>\n                           </div>\n                           </a>\n                       </div>\n                   )) \n                }\n            </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch} from '@fortawesome/free-solid-svg-icons';\n\nexport class Navbar extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tquery: \"\"\n\t\t};\n\t\t\n\t\tthis.isEnterPressed = this.isEnterPressed.bind(this);\n\t\tthis.userInput = this.userInput.bind(this);\n\t\tthis.sendQuery = this.sendQuery.bind(this);\n\t\n\t}\n\n\tisEnterPressed = event => { \n\t\tif(event.key === \"Enter\"){\n\t\t\tif (this.state.query !== \"\"){\n\t\t\t\tthis.sendQuery();\n\t\t\t}else{\n\t\t\t\talert(\"please search for something..\");\n\t\t\t}\t\n\t\t}\n\t}\n\t\n\tsendQuery = () => {\n\t\tthis.props.retreiveData(this.state.query);\n\t}\n\n\tuserInput = (event) => {\n\t\t\n\t\tthis.setState({\n\t\t\tquery: event.target.value\n\t\t});\n\t};\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"navwrapper\">\n\t\t\t\t<input className=\"search-bar\" type=\"text\" placeholder=\"search here..\" onChange={this.userInput} onKeyPress={this.isEnterPressed}/>\n\t\t\t\t<button className=\"search-btn\" onClick={this.sendQuery} title=\"search\"><FontAwesomeIcon icon={faSearch} /></button>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\n\nexport class Pagination extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lastPage: 0,\n            getPage: 0,\n            pages: [],\n        }\n\n        this.sendPage = this.sendPage.bind(this);\n\n    }\n\n    static getDerivedStateFromProps(props, state){\n        return {\n            pages: props.btnDetail,\n            lastPage: props.lastPage\n        };\n    }\n\n    sendPage = event => {\n        \n        this.setState(\n            {\n                getPage: event.target.value\n            },\n            ()=> {this.props.retreivePage(this.state.getPage);}\n        );\n        \n    }\n\n    render() {\n\n        return(\n            <div className=\"page-list\">\n                <button className=\"page-item\" onClick={this.sendPage} value={0}>FIRST</button>\n                {(this.state.pages).map((pagBtn, i) => (\n                <button key={i} className=\"page-item\" onClick={this.sendPage} value={pagBtn-1}>{pagBtn}</button>\n                ))}\n                <button className=\"page-item\" onClick={this.sendPage} value={this.state.lastPage}>LAST</button>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport class FilterSearch extends React.Component {\n\n    mSectionList = [];\n    mFilterList = [];\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            sDate: \"\",\n            eDate: \"\",\n            sectionList:[],\n            filterList:[],\n            sort: \"\"\n        }\n\n        this.myCheckBox = this.myCheckBox.bind(this);\n    }\n\n    checkList = (array, value) => {\n        return array.includes(value);\n    }\n\n    updateState = () => {\n\n        this.setState({\n            filterList: this.mFilterList,\n            sectionList: this.mSectionList\n        }, ()=>{\n            this.props.retreiveFilteredQuery(this.state);\n        });\n    }\n\n    checkBoxEvent = (event) => {\n        const value = event.target.value;\n        if (event.target.checked){\n            this.handleState(value);\n        }else{\n            //remove from state if checkbox is not ticked\n            if (this.checkList(this.mFilterList, value)){\n                this.mFilterList.splice(this.mFilterList.indexOf(value), 1);\n            }\n            if (this.checkList(this.mSectionList, value)){\n                this.mSectionList.splice(this.mSectionList.indexOf(value), 1);\n            }\n        }\n\n        this.updateState();\n    }\n\n    inputEvent = (event) => {\n        \n        const value = event.target.value;\n        const name = event.target.name;\n        \n        if (name === \"sdate\"){\n            this.setState({\n                sDate: value\n            })\n        }else{\n            this.setState({\n                eDate: value\n            });\n        }\n        \n        this.updateState();\n    }\n\n    handleSort = (event) => {\n\n        const value = event.target.value;\n        this.setState({\n            sort: value\n        });\n\n        this.updateState();\n    }\n\n    handleState = (value) => {\n\n        switch(value){\n            case\"article\":\n            case\"biography\":\n            case\"blog\":\n            case\"interview\":\n            case\"news\":\n            case\"review\":\n            case\"statistics\":\n                //to prevent duplicate entries\n                if (!this.checkList(this.mFilterList, value)){\n                    this.mFilterList.push(value);\n                }\n                break;\n            default:\n                //we assume value is a part of section if all else failed\n                if (!this.checkList(this.mSectionList, value)){\n                    this.mSectionList.push(value);\n                }\n                break;\n        }\n        \n    }\n\n    myCheckBox = (param) => {\n\n        return (\n            <div key={param}>\n                <input type=\"checkbox\" id={param} value={param} onChange={this.checkBoxEvent}/>\n                <label htmlFor={param}>{this.capFirstLetter(param)}</label>\n            </div>\n        );\n    }\n\n    capFirstLetter = (str) => {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    render() { \n\n        const newsSections = [\"World\", \"Politics\", \"Arts\", \"Books\", \"Business\", \n            \"Education\", \"Food\", \"Health\", \"Style\", \"Movies\", \"National\", \n            \"Real Estate\", \"Science\", \"Technology\",\"Sports\", \"Learning\"];\n\n        const filterQueryBy = [\"news\",\"article\", \"biography\", \"blog\", \"interview\", \n             \"review\", \"statistics\"];\n    \n        return(\n            <div className=\"filter-wrapper\" >\n                <div className=\"filter-container\">\n                    <div className=\"filter-options\">\n                        <div className=\"option-element\"><label>Section</label></div>\n                        <div className=\"option-element checkbox-list\">\n                            {\n                                newsSections.map((section) => (\n                                    this.myCheckBox(section)\n                                ))\n                            }\n                        </div>\n                    </div>\n                    <div className=\"filter-options\">\n                        <div className=\"option-element\"><label>Type of Material</label></div>\n                        <div className=\"option-element checkbox-list\">\n                            {\n                                filterQueryBy.map((queryType) => (\n                                    this.myCheckBox(queryType)\n                                ))\n                            }\n                        </div>\n                        <div className=\"option-element\"><label>Sort by</label></div>\n                        <div className=\"option-element\">\n                        <input type=\"date\" placeholder=\"start yyyy-mm-dd\" name=\"sdate\" onChange={this.inputEvent}></input>\n                        </div>\n                        <div className=\"option-element\">\n                            <input type=\"date\" placeholder=\"end yyyy-mm-dd\" name=\"edate\" onChange={this.inputEvent}></input>\n                            <select className=\"filter-selector\" onChange={this.handleSort}>\n                                <option value=\"relevance\">relevance</option>\n                                <option value=\"oldest\">old</option>\n                                <option value=\"newest\">new</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","export default class StringModifier {\n\n    //changes format from YYYY-MM-DD to YYYYMMDD\n\tformatFilteredDate = (str) => {\n\t\treturn str.replace(/-/g, \"\");\n\t}\n}","import React, { Suspense } from 'react';\nimport MostPopular from './components/MostPopular';\nimport {Navbar} from './components/Navbar';\nimport {Pagination} from './components/Pagination';\nimport {FilterSearch} from './components/FilterSearch';\nimport {Config} from './bin/config';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowDown, faArrowUp} from '@fortawesome/free-solid-svg-icons';\nimport StringModifier from './util/StringModifier';\nconst LazyArticle = React.lazy(() => import('./components/Article'));\n\nexport class App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisReady: false,\n\t\t\tisFilterSearch: false,\n\t\t\tpage: 0,\n\t\t\tnumOfArticle: 0,\n\t\t\toffset: 0,\n\t\t\tlastPage: 0,\n\t\t\tuserQuery: \"\",\n\t\t\tres: [],\n\t\t\tpagination: [],\n\t\t\tfilterObj: {sections: [], filter: [], sDate: \"\", eDate: \"\", sort: \"\"},\n\t\t\terr: null\n\t\t}\n\n\t\tthis.queryData = this.queryData.bind(this);\n\t\tthis.adjustPagination = this.adjustPagination.bind(this);\n\t}\n\n\t//toggle wether to show/hide filter search\n\tfilterSearch = () => {\n\n\t\tif (!this.state.isFilterSearch){\n\t\t\tthis.setState({\n\t\t\t\tisFilterSearch: true,\n\t\t\t});\n\t\t}else{\n\t\t\tthis.setState({\n\t\t\t\tisFilterSearch: false,\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\n\t//receives user's input from filtersearch component\n\tonFilterSearch = (compState) => {\n\t\tthis.setState({\n\t\t\tfilterObj: {\n\t\t\t\tsections: compState.sectionList, \n\t\t\t\tfilter: compState.filterList, \n\t\t\t\tsDate: compState.sDate, \n\t\t\t\teDate: compState.eDate,\n\t\t\t\tsort: compState.sort\n\t\t\t}\n\t\t});\n\t};\n\n\tonSearch = (cData) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tuserQuery: cData\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.queryData();\n\t\t\t}\n\t\t);\n\t};\n\n\tonPageChange = (inPage) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tpage: inPage\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.queryData();\n\t\t\t}\n\t\t);\n\t}\n\n\tqueryData = () => {\n\t\tif (this.state.userQuery !== \"\"){\n\t\t\tthis.processFetch(this.state.userQuery);\n\t\t}\n\t}\n\n\tadjustPagination = () => {\n\t\t\n\t\tlet total = this.state.numOfArticle;\n\t\tlet limit = 10;\n\t\tlet pageObj= [], mArr = [];\n\t\tlet pages = Math.floor(total/limit);\n\t\tlet mOffset = this.state.offset;\n\t\tconst pageNumber = Math.floor(mOffset/10);\n\n\t\tfor (let i=0; i < pages;i++){\n\t\t\tif (i < 100){\n\t\t\t\tpageObj[i] = i+1;\n\t\t\t}else{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst lPage = (pageObj.length - 1);\n\n\t\tif(pageNumber >= 5 && pageNumber <= 93){\n\t\t\tconst moveBy = 5;\n\t\t\tconst a = pageNumber - moveBy;\n\t\t\tconst b = pageNumber + moveBy;\n\t\t\tmArr = pageObj.slice(a,b);\n\t\t}else if (pageNumber > 93){\n\t\t\tmArr = pageObj.slice(90,100);\n\t\t}else if (pageNumber < 5){\n\t\t\tmArr = pageObj.slice(0, 10);\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\tpagination: mArr,\n\t\t\tpage: pageNumber,\n\t\t\tlastPage: lPage\n\t\t});\n\n\t}\n\n\t\n\n\t//can replace Config.getApiKey() with your own api key from https://developer.nytimes.com/\n\tprocessFetch = (queryParam) => {\n\t\t\n\t\t//filtered fetch\n\t\tif(this.state.isFilterSearch){\n\n\t\t\tlet startDate = \"\", endDate = \"\";\n\t\t\tlet sortBy = \"&sort=relevance\";\n\t\t\tlet sectionListStr = \"\", filterListStr = \"\";\n\n\t\t\t//filter search based on date\n\t\t\tif(this.state.filterObj.sDate !== \"\" && this.state.filterObj.eDate){\n\t\t\t\t//call date format to remove hyphenes\n\t\t\t\tstartDate = \"&begin_date=\" + StringModifier.formatFilteredDate(this.state.filterObj.sDate);\n\t\t\t\tendDate = \"&end_date=\" + StringModifier.formatFilteredDate(this.state.filterObj.eDate);\n\n\t\t\t}\n\t\t\t\n\t\t\tif(this.state.filterObj.sort !== \"\"){\n\t\t\t\tsortBy = \"&sort=\" + this.state.filterObj.sort;\n\t\t\t}\n\n\t\t\tif(typeof this.state.filterObj.sections != \"undefined\" \n\t\t\t\t&& this.state.filterObj.sections != null\n\t\t\t\t&& this.state.filterObj.sections.length != null \n\t\t\t\t&& this.state.filterObj.sections.length > 0){\n\t\t\t\t\n\t\t\t\tsectionListStr = \"&fq=section_name:(\";\n\t\t\t\tfor (let elem in this.state.filterObj.sections){\n\t\t\t\t\tsectionListStr += \"\\\"\" +this.state.filterObj.sections[elem] + \"\\\"\";\n\t\t\t\t}\n\t\t\t\tsectionListStr += \")\";\n\n\t\t\t}\n\n\t\t\tif (typeof this.state.filterObj.filter != \"undefined\"\n\t\t\t\t&& this.state.filterObj.filter != null\n\t\t\t\t&& this.state.filterObj.filter.length != null\n\t\t\t\t&& this.state.filterObj.filter.length > 0){\n\t\t\t\t\n\t\t\t\t//check if section checkboxes is selected\n\t\t\t\tif (sectionListStr.length > 0){\n\t\t\t\t\tfilterListStr = \" AND\";\n\t\t\t\t}else{\n\t\t\t\t\tfilterListStr = \"&fq=\"\n\t\t\t\t}\n\t\t\t\tfilterListStr += \" type_of_material:(\"\n\t\t\t\tfor(let i in this.state.filterObj.filter){\n\t\t\t\t\tfilterListStr += \"\\\"\" + this.state.filterObj.filter[i] + \"\\\"\";\n\t\t\t\t}\n\t\t\t\tfilterListStr += \")\";\n\t\t\t}\n\n\t\t\tfetch(\"https://api.nytimes.com/svc/search/v2/articlesearch.json?q=\"\n\t\t\t\t+ this.state.userQuery\n\t\t\t\t+ sectionListStr \n\t\t\t\t+ filterListStr\n\t\t\t\t+ startDate\n\t\t\t\t+ endDate\n\t\t\t\t+ sortBy\n\t\t\t\t+ \"&page=\" + this.state.page\n\t\t\t\t+ \"&api-key=\" + Config.getApiKey()\n\t\t\t).then((response)=>{\n\t\t\t\tif(!response.ok){\n\t\t\t\t\tthrow Error(response.statusText);\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\t).then(res => res.json()\n\t\t\t).then(\n\t\t\t\tresult => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tres: result.response,\n\t\t\t\t\t\tnumOfArticle: result.response.meta.hits,\n\t\t\t\t\t\toffset: result.response.meta.offset,\n\t\t\t\t\t\tisReady: true\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terr: error,\n\t\t\t\t\t\tisReady: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t).then(\n\t\t\t\t() => this.adjustPagination()\n\t\t\t)\n\t\t}else{\n\t\t\t//default fetch\n\t\t\tfetch(\n\t\t\t\t\"https://api.nytimes.com/svc/search/v2/articlesearch.json?q=\" + queryParam +\n\t\t\t\t\"&sort=relevance\" +\n\t\t\t\t\"&page=\" + this.state.page +\n\t\t\t\t\"&api-key=\" + Config.getApiKey()\n\t\t\t).then((response)=>{\n\t\t\t\tif(!response.ok){\n\t\t\t\t\tthrow Error(response.statusText);\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t}).then(res => res.json()\n\t\t\t).then(\n\t\t\t\tresult => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tres: result.response,\n\t\t\t\t\t\tnumOfArticle: result.response.meta.hits,\n\t\t\t\t\t\toffset: result.response.meta.offset,\n\t\t\t\t\t\tisReady: true\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terr: error,\n\t\t\t\t\t\tisReady: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t).then(\n\t\t\t\t() => this.adjustPagination()\n\t\t\t);\n\t\t}\n\t\t\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Navbar retreiveData = {this.onSearch} />\n\t\t\t\t{this.state.isFilterSearch ? <FilterSearch retreiveFilteredQuery = {this.onFilterSearch} toggleFilter={this.state.isFilterSearch} /> : null}\n\t\t\t\t<button className=\"filter-btn\" title=\"filter\" onClick={this.filterSearch}><FontAwesomeIcon icon={this.state.isFilterSearch ? faArrowUp:faArrowDown} /></button>\n\t\t\t\t<Suspense fallback={<div><img src=\"logo.svg\" alt=\"\"></img></div>}>\n\t\t\t\t\t{this.state.isReady ? <LazyArticle res={this.state.res}/> : <MostPopular />}\n\t\t\t\t</Suspense>\n\t\t\t\t{this.state.isReady ? <Pagination retreivePage = {this.onPageChange} btnDetail = {this.state.pagination} lastPage = {this.state.lastPage}/> : null}\n\t\t\t</div>\n\t\t);\n\t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst Footer = () => (\n    <footer className=\"footer\">\n        <div>New York Times article searcher</div>\n    </footer>\n);\n\nReactDOM.render([<App />, <Footer />], document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}